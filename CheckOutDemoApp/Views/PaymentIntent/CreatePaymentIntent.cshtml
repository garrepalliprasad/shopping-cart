@model PaymentIntentViewModel
@{
    ViewBag.Title = "PaymentIntent Page";
}
<form method="post" asp-controller="PaymentIntent" asp-action="CreatePaymentIntent" id="payment-form">
    <div class="card">
        <div class="card-header">
            Check Your Details and Enter Your Card Details Here...
        </div>
        <div class="card-body">
            <input asp-for="Customer.Id" type="hidden"/>
            <input asp-for="Price" type="hidden" />
            <input asp-for="Price.UnitAmountDecimal" type="hidden" />
            <div class="form-group">
                <label asp-for="Customer.Name"></label>
                <input asp-for="Customer.Name" class="form-control" disabled/>
            </div>
            <div class="form-group">
                <label asp-for="Customer.Email"></label>
                <input asp-for="Customer.Email" class="form-control" disabled/>
            </div>
            <div class="form-group">
                <label asp-for="Customer.Address"></label>
                <div class="form-group">
                    <label asp-for="Customer.Address.Line1"></label>
                    <input asp-for="Customer.Address.Line1" class="form-control"disabled />
                </div>
                <div class="form-group">
                    <label asp-for="Customer.Address.Line2"></label>
                    <input asp-for="Customer.Address.Line2" class="form-control" disabled/>
                </div>
                <div class="form-group">
                    <label asp-for="Customer.Address.City"></label>
                    <input asp-for="Customer.Address.City" class="form-control" disabled/>
                </div>
                <div class="form-group">
                    <label asp-for="Customer.Address.State"></label>
                    <input asp-for="Customer.Address.State" class="form-control" disabled/>
                </div>
                <div class="form-group">
                    <label asp-for="Customer.Address.Country"></label>
                    <input asp-for="Customer.Address.Country" class="form-control" disabled/>
                </div>
                <div class="form-group">
                    <label asp-for="Customer.Address.PostalCode"></label>
                    <input asp-for="Customer.Address.PostalCode" class="form-control" disabled />
                </div>
                <div class="form-group">
                    <label asp-for="CardNumber"></label>
                    <input asp-for="CardNumber" class="form-control" />
                    <span asp-validation-for="CardNumber" class="text-danger"></span>
                </div>
                <div class="form-group row">
                    <div class="form-group col-md-4">
                        <label asp-for="ExpMonth"></label>
                        <input asp-for="ExpMonth" class="form-control" />
                        <span asp-validation-for="ExpMonth" class="text-danger"></span>
                    </div>
                    <div class="form-group col-md-4">
                        <label asp-for="ExpYear"></label>
                        <input asp-for="ExpYear" class="form-control" />
                        <span asp-validation-for="ExpYear" class="text-danger"></span>
                    </div>
                    <div class="form-group col-md-4">
                        <label asp-for="Cvc"></label>
                        <input asp-for="Cvc" class="form-control" />
                        <span asp-validation-for="Cvc" class="text-danger"></span>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-footer">
            <button type="submit" class="btn btn-success form-control">Pay @Model.Price.UnitAmountDecimal</button>
        </div>
    </div>
</form>





































































@*<input type="hidden" asp-for="PaymentMethodId" />
    <input type="hidden" asp-for="Id" />
    <button type="submit">Pay</button>*@
@*<div class="card">
            <div class="card-header">
                Create Customer Here..
            </div>
            <div class="card-body">
                <div class="form-group">
                    <label asp-for="Customer.Name"></label>
                    <input asp-for="Customer.Name" class="form-control" />
                </div>
                <div class="form-group">
                    <label asp-for="Customer.Email"></label>
                    <input asp-for="Customer.Email" class="form-control" />
                </div>
                <div class="form-group">
                    <label asp-for="Customer.Phone"></label>
                    <input asp-for="Customer.Phone" class="form-control" />
                </div>
                <div class="form-group">
                    <div>
                        <label asp-for="Customer.Address"></label>
                        <div class="form-group">
                            <label asp-for="Customer.Address.Line1"></label>
                            <input asp-for="Customer.Address.Line1" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label asp-for="Customer.Address.Line2"></label>
                            <input asp-for="Customer.Address.Line2" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label asp-for="Customer.Address.City"></label>
                            <input asp-for="Customer.Address.City" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label asp-for="Customer.Address.State"></label>
                            <input asp-for="Customer.Address.State" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label asp-for="Customer.Address.Country"></label>
                            <input asp-for="Customer.Address.Country" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label asp-for="Customer.Address.PostalCode"></label>
                            <input asp-for="Customer.Address.PostalCode" class="form-control " />
                        </div>
                        <div class="form-group">
                            <label for="card-element">
                                Credit or debit card
                            </label>
                            <div id="card-element">
                                <!-- A Stripe Element will be inserted here. -->
                            </div>

                            <!-- Used to display form errors. -->
                            <div id="card-errors" role="alert"></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-footer">
                <button type="submit" class="btn btn-success" data-secret="@ViewData["ClientSecret"]">Submit</button>
            </div>
        </div>
    </form>
    @section Stripe{
        <script>
            var elements = stripe.elements();

            // Custom styling can be passed to options when creating an Element.
            // (Note that this demo uses a wider set of styles than the guide below.)
            var style = {
                base: {
                    color: '#32325d',
                    fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
                    fontSmoothing: 'antialiased',
                    fontSize: '16px',
                    '::placeholder': {
                        color: '#aab7c4'
                    }
                },
                invalid: {
                    color: '#fa755a',
                    iconColor: '#fa755a'
                }
            };

            // Create an instance of the card Element.
            var card = elements.create('card', { style: style });

            // Add an instance of the card Element into the `card-element` <div>.
            card.mount('#card-element');

            // Handle real-time validation errors from the card Element.
            card.on('change', function (event) {
                var displayError = document.getElementById('card-errors');
                if (event.error) {
                    displayError.textContent = event.error.message;
                } else {
                    displayError.textContent = '';
                }
            });

            // Handle form submission.
            var form = document.getElementById('payment-form');
            form.addEventListener('submit', function (event) {
                event.preventDefault();

                stripe.createToken(card).then(function (result) {
                    if (result.error) {
                        // Inform the user if there was an error.
                        var errorElement = document.getElementById('card-errors');
                        errorElement.textContent = result.error.message;
                    } else {
                        // Send the token to your server.
                        stripeTokenHandler(result.token);
                    }
                });
            });

            // Submit the form with the token ID.
            function stripeTokenHandler(token) {
                // Insert the token ID into the form so it gets submitted to the server
                var form = document.getElementById('payment-form');
                var hiddenInput = document.createElement('input');
                hiddenInput.setAttribute('type', 'hidden');
                hiddenInput.setAttribute('name', 'stripeToken');
                hiddenInput.setAttribute('value', token.id);
                form.appendChild(hiddenInput);

                // Submit the form
                form.submit();
            }
            form.addEventListener('submit', function (ev) {
                ev.preventDefault();
                stripe.confirmCardPayment(@ViewData["ClientSecret"], {
                    payment_method: {
                        card: card,
                        billing_details: {
                            name: 'G.Lasya'
                        }
                    }
                }).then(function (result) {
                    if (result.error) {
                        // Show error to your customer (e.g., insufficient funds)
                        console.log(result.error.message);
                    } else {
                        // The payment has been processed!
                        if (result.paymentIntent.status === 'succeeded') {
                            // Show a success message to your customer
                            // There's a risk of the customer closing the window before callback
                            // execution. Set up a webhook or plugin to listen for the
                            // payment_intent.succeeded event that handles any business critical
                            // post-payment actions.
                        }
                    }
                });
            });
        </script>
    }*@
